#!/usr/bin/env bash
#
bold=$(tput bold)
normal=$(tput sgr0)
me=$(basename "$0")
doi=""
b=""
q=""
while test $# -gt 0; do
  case "$1" in
    -h|--help)
      echo "${bold}$me - generate bibtex record for specified doi${normal}"
      echo " "
      echo "${bold}usage:${normal} $me DOI"
      echo " "
      echo "options:"
      echo "-h, --help                show brief help"
      echo "-x XXX[,YYY]              remove unneeded items according to specified key(s)"
      exit 0
      ;;
    -q)
      shift
      q="q"
      ;;
    -x)
      shift
      if test $# -gt 0; then
        b="$1"
        shift
      fi
      ;;
    *)
      if test $# -gt 0; then
        doi="$1"
        shift
      fi
      ;;
  esac
done

if test -z "$b" ; then
  b="month"
else
  b="${b},month"
fi

if test -z "$doi" ; then
  if test -z "$q" ; then echo "DOI is mandaroty but not specified!" ; fi
  exit 1
fi

if [[ "$doi" != "10."* ]] ; then
  if test -z "$q" ; then echo "Not a valid DOI specified!" ; fi
  exit 1
fi

function _t1 {
  oo="$1"
  oo_=$(echo "$oo" | grep -oP '(title\s*=\s*{)\K[^\{\}]*(?=\})' | cut -d ' ' -f1-3)
  arr_=('A' 'AN' 'THE' 'ON' 'DO' 'CAN' 'IS' 'ARE' 'AM' 'WILL' 'THERE' 'SOME')
  o0=$(echo "$oo_" | cut -d ' ' -f1)
  o1=$(echo "$oo_" | cut -d ' ' -f2)
  o2=$(echo "$oo_" | cut -d ' ' -f3)
  if [[ $(echo "${arr_[@]}" | grep -w "${o0^^}") ]] ; then
    if [[ $(echo "${arr_[@]}" | grep -w "${o1^^}") ]] ; then
      echo "${o2,,}"
    else
      echo "${o1,,}"
    fi
  else
    echo "${o0,,}"
  fi
}

function _pure_t1 {
  oo="$1"
  oo=$(echo "${oo}" | sed 's/[{}`:]//g')
  dd=$(echo "${oo}" | grep -o '[\-‐]*')
  if test -n "$dd" ; then
    echo  "${oo}" | grep -oP ".*(?=${dd})"
  else
    echo "${oo}"
  fi
}

function _rm_items {
  _o="$1"
  for i in $(echo "$b" | tr "," " "); do
    _o=$(echo "$_o" | sed 's/'"$i"'={[^\{\}]*},\? \?//gI')
  done
  echo "$_o"
}

function _tolines {
  _o="$1"
  echo "$_o" | sed 's/\s*\(\w\+\)=\({[^\{\}]*}\)/\n  \L\1\E = \2/g' | sed 's/},\? \?}/}\n}\n/'
}

function _keys {
  o0="$1"
  o1="$2"
  echo "$o0" | sed "s/^\s\+//" | sed -E "s/(\w*)_[0-9]*([0-9]{2}),/\L\1\2${o1},/"
}

function _eq_ {
  _o="$1"
  o0=$(echo "$1" | grep -E "(pages|issn)\s*=") # dash between numbers
  if test -n "$o0" ; then
    _o=$(echo "$_o" | sed 's/\([0-9]\+\s\?\)[–-]\(\s\?[0-9]\+\)/\1--\2/')
  fi
  o0=$(echo "$1" | grep -E "(author|editor)\s*=") # NAME --> Name
  if test -n "$o0" ; then
    _o=$(echo "$_o" | sed 's/\([[:upper:]]\{2,\}\)/\L\u\1/g')
  fi
  echo "$_o"
}

doi=$(echo "$doi" | sed 's/https\?:\/\/doi.org\///')
o=$(curl -sLH "Accept: application/x-bibtex" https://doi.org/$doi)

if test -z "$o" ; then
  if test -n "$q" ; then echo "curl: returns empty! Check then validity of DOI!" ; fi
  exit 1
fi

_o=$(echo "$o" | grep -i "doi not found")
if test -n "$_o" ; then
  if test -n "$q" ; then echo "DOI Not Found, which may be not activated Currently!" ; fi
  exit 1
fi

tt=$(_t1 "${o}")
tt=$(_pure_t1 "$tt")

o=$(_rm_items "$o")
o=$(_tolines "$o")
while IFS= read -r i ; do
  o0=$(echo "$i" | grep "@\w\+")
  if test -n "$o0" ; then
    _keys "$i" "$tt"
  else
    _eq_ "$i"
  fi
done <<< "$o"

#o=$(echo $o | sed -E 's/(\w*)_[0-9]*([0-9]{2}),/\L\1\2'"${tt}"',/' | sed 's/month=\w*,\? \?//g' | sed 's/DOI=/doi=/' | sed 's/\(pages\s\?=\s\?{\s\?[0-9]\+\s\?\)[–-]\(\s\?[0-9]\+\)/\1--\2/')
#if test -n "$b"; then
#  for i in $(echo "$b" | tr "," " "); do
#    o=$(echo "$o" | sed 's/'"$i"'={[^\{\}]*},\? \?//gI')
#  done
#fi
#
#echo "$o" | sed 's/\s*\(\w\+\)=\({[^\{\}]*}\)/\n  \1 = \2/g' | sed 's/},\? \?}/}\n}\n/'
