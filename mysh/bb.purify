#!/usr/bin/env bash
#
bold=$(tput bold)
normal=$(tput sgr0)
me=$(basename "$0")
v_=""

#rec_=`which bb.rec`
#args_=("$@")

while test $# -gt 0; do
  case "$1" in
    -h|--help)
      echo "${bold}$me - replace some special character in the bib file${normal}"
      echo " "
      echo "${bold}usage:${normal} $me [options] [BIBFILE]"
      echo "        if BIBFILE not specified, the first found .bib file in the current directory will be used!"
      echo " "
      echo "options:"
      echo "-h, --help                show brief help"
      echo "-v                        show more message"
      exit 0
      ;;
    -v)
      v_="v"
      shift
      ;;
    *)
      if test $# -gt 0; then
        bib="$1"
      fi
      shift
      ;;
  esac
done

if test -z "$bib" ; then
  if test $(ls -1 *bib | wc -l) -gt 0; then
    tmp=(*bib)
    bib=${tmp[0]}
    if test "$v_" ; then
      echo "$me: bib file not specified; the following file found in the current directory used!"
      echo "$me: \"$bib\""
    fi
  else
    if test "$v_" ; then
      echo "$me: bib file not specified and not found in the current directory! Exiting..."
    fi
    exit 0
  fi
fi

declare -A dict_
dict_["≥"]="\$\\ge\$"
dict_["≤"]="\$\\le\$"
dict_["−"]="--"
dict_["\\degree"]="\\textdegree"

for i in "${!dict_[@]}" ; do
  tmp_=$(echo "${dict_[${i}]}" | sed 's`[][\\/.*^$]`\\&`g')
  if test "$v_" ; then
    echo "$me: sed -i \"s/${i}/${tmp_}/g\" \"$bib\""
  fi
  sed -i "s/${i}/${tmp_}/g" "$bib"
done
