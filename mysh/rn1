#!/bin/bash
#
bold=$(tput bold)
normal=$(tput sgr0)
me=$(basename "$0")
#ext='*'
if [ "$(which rn4)" ]; then
  RN4=$(which rn4)
else
  cd "$(dirname "${BASH_SOURCE[0]}")"
  pp=$(pwd)
  cd ~-
  if [ -x "${pp}/rn4" ]; then
    RN4=${pp}/rn4
  fi
fi
if [ -z "${RN4}" ]; then
  echo 'rn4 not found; EXIT!!!'
  exit 1
fi

pwd_=$(pwd)
#getting arguments now
while test $# -gt 0; do
  case "$1" in
    -h|--help)
      echo "${bold}$me - rename files sequentially under a directory${normal}"
      echo "++ ${bold}rn4 may required for no-simulation mode!${normal} ++"
      echo " "
      echo "${bold}usage:${normal} $me [options] [DIRECTORY]"
      echo " "
      echo "options:"
      echo "-h, --help                show brief help"
      echo "-x, --ext=EXT             only applied for files with this extention; default all"
      echo "-p, --prefix=PREFIX       PREFIX_XXXX.EXT; default name of targit directory"
      echo "-i, --ini=INI             basement for increament; default 0"
      echo "-s                        simulation mode (not executed)"
      echo "-v                        verbose mode"
      exit 0
      ;;
    -x|--ext)
      shift
      if test $# -gt 0; then
        ext=$1
        shift
      fi
      ;;
    --ext*)
      ext=$(echo $1 | sed -e 's/^[^=]*=//g')
      shift
      ;;
    -p|--prefix)
      shift
      if test $# -gt 0; then
        pre=$1
        shift
      fi
      ;;
    --prefix*)
      pre=$(echo $1 | sed -e 's/^[^=]*=//g')
      shift
      ;;
    -i|--ini)
      shift
      if test $# -gt 0; then
        k=$1
        shift
      fi
      ;;
    --ini*)
      k=$(echo $1 | sed -e 's/^[^=]*=//g')
      shift
      ;;
    -v)
      v_='-v'
      shift
      ;;
    -s)
      s_='-s'
      shift
      ;;
    *)
      wkd_=$1
      shift
      ;;
  esac
done
#getting arguments done
#if change directory
if [ "${wkd_}" ]; then
  if [ -d "${wkd_}" ]; then
    if [ "${v_}" ]; then
      echo 'cd '"${wkd_}"
    fi
    cd "${wkd_}"
  else
    echo "'${wkd_}' not a directory; EXIT!!!"
    exit 1
  fi
fi
#to FILENAME.x.EXT
if [ -z "${s_}" ]; then
  if [ "${ext}" ]; then
    "${RN4}" -x "${ext}" ${v_}
  else
    "${RN4}" ${v_}
  fi
fi
#PRE_KKKK
k=${k:-0}
pre=${pre:-$(pwd | sed 's/.*\///')}
#packed as an function
function do_something_ {
  local IFS=$'\n'
  for i in $(find . -d 1 -type f -name "[^\.\_]*${ext:+".${ext}"}" -exec ls -1tr "{}" +;)
  do
    if [ -f "$i" ]; then
      k=$((k+1))
      kk=$(printf "%4.4d" "$k")
      i_=$(basename "$i")
      ext_=$([[ "${i_}" = *.* ]] && echo ".${i_##*.}" || echo '')
      tmp="${pre}_${kk}${ext_}"
      if [ -f "${tmp}" ]; then
        echo 'mv' "'$i'" "'${tmp}'" 'failed! TARGET already exists! SKIP!!!'
      else
        if [ "${s_}" -o "${v_}" ]; then
          echo 'mv' "'$i'" "'${tmp}'" 
        fi
        if [ -z "${s_}" ]; then
          mv "$i" "${tmp}"
        fi
      fi
    fi
  done
}
#execute function just defined
if [ "${s_}" ]; then
  echo "${bold}in simulation mode; NONE changes on disk!!!${normal}"
fi
do_something_
#to where when you did nothing
if [ "${wkd_}" ]; then
  if [ "${s_}" -o "${v_}" ]; then
    echo 'finished; exit.'
  fi
  cd "${pwd_}"
fi
#finish
